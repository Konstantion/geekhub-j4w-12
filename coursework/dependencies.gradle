def springBootVersion = '3.0.4'
def springVersion = '6.0.2'
def openApiVersion = '2.0.2'

def jupiterApiVersion = '5.8.1'
def mockitoJunitJupiterVersion = '4.8.0'
def mockitoInline = '3.11.2'
def mockitoCore = '4.8.0'
def assertjCoreVersion = '3.23.1'
def testContainerVersion = '1.17.6'

def guavaVersion = '31.1-jre'
def commonsLang3Version = '3.12.0'
def mapStructVersion = '1.5.3.Final'
def lombokVersion = '1.18.24'
def fakerVersion = '1.0.2'
def jasksonVersion = '2.14.2'
def itextpdfVersion = '5.5.13.3'
def pdfboxVersion = '2.0.24'

def hikariCPVersion = '5.0.1'
def postgresVersion = '42.5.0'
def flywayCoreVersion = '9.15.1'

def jwtVersion = '0.11.2'

ext.libsDatabase = [
        'flywayCore'    : "org.flywaydb:flyway-core:$flywayCoreVersion",
        'hikariCP'      : "com.zaxxer:HikariCP:$hikariCPVersion",
        'postgres'      : "org.postgresql:postgresql:$postgresVersion",
        'postgresDriver': "org.postgresql:postgresql:$postgresVersion"
]

ext.libsSpring = [
        'springBoot'                        : "org.springframework.boot:spring-boot:$springBootVersion",
        'springBootStarterDataJpa'          : "org.springframework.boot:spring-boot-starter-data-jpa:$springBootVersion",
        'springBootStarterDataJdbc'         : "org.springframework.boot:spring-boot-starter-data-jdbc:$springBootVersion",
        'springBootStarterValidation'       : "org.springframework.boot:spring-boot-starter-validation:$springBootVersion",
        'springBootStarterWeb'              : "org.springframework.boot:spring-boot-starter-web:$springBootVersion",
        'springBootStarterWebsocket'        : "org.springframework.boot:spring-boot-starter-websocket:$springBootVersion",
        'springBootStarterWebflux'          : "org.springframework.boot:spring-boot-starter-webflux:$springBootVersion",
        'springBootStarterThymeleaf'        : "org.springframework.boot:spring-boot-starter-thymeleaf:$springBootVersion",
        'springBootStarterSecurity'         : "org.springframework.boot:spring-boot-starter-security:$springBootVersion",
        'springBootStarterMail'             : "org.springframework.boot:spring-boot-starter-mail:$springBootVersion",
        'springBootConfigurationProcessor'  : "org.springframework.boot:spring-boot-configuration-processor:$springBootVersion",
        'springBootDevtools'                : "org.springframework.boot:spring-boot-devtools:$springBootVersion",
        'springBootStarterLogging'          : "org.springframework.boot:spring-boot-starter-logging:$springBootVersion"
]

ext.libsUtils = [
        'guava'                 : "com.google.guava:guava:$guavaVersion",
        'commonsLang3'          : "org.apache.commons:commons-lang3:$commonsLang3Version",
        'mapstruct'             : "org.mapstruct:mapstruct:$mapStructVersion",
        'mapstructProcessor'    : "org.mapstruct:mapstruct-processor:$mapStructVersion",
        'lombokMapstructBinding': "org.projectlombok:lombok-mapstruct-binding:0.2.0",
        'lombok'                : "org.projectlombok:lombok:$lombokVersion",
        'faker'                 : "com.github.javafaker:javafaker:$fakerVersion",
        'itextpdf'              : "com.itextpdf:itextpdf:$itextpdfVersion",
        'pdfbox'                : "org.apache.pdfbox:pdfbox:$pdfboxVersion",
        'jasksonDatabind'       : "com.fasterxml.jackson.core:jackson-databind:$jasksonVersion"
]


ext.libsSpringDoc = [
        'openapiStarterWebmvcUi' : "org.springdoc:springdoc-openapi-starter-webmvc-ui:$openApiVersion",
        'openapiStarterWebmvcApi': "org.springdoc:springdoc-openapi-starter-webmvc-api:$openApiVersion",
        'openapiStarterCommon'   : "org.springdoc:springdoc-openapi-starter-common:$openApiVersion"
]

ext.libsTest = [
        'assertjCore'             : "org.assertj:assertj-core:$assertjCoreVersion",
        'jupiterApi'              : "org.junit.jupiter:junit-jupiter-api:$jupiterApiVersion",
        'jupiterParams'           : "org.junit.jupiter:junit-jupiter-params:$jupiterApiVersion",
        'junitJupiterEngine'      : "org.junit.jupiter:junit-jupiter-engine:$jupiterApiVersion",
        'mockitoInline'           : "org.mockito:mockito-inline:$mockitoInline",
        'mockitoCore'             : "org.mockito:mockito-core:$mockitoCore",
        'mockitoJunitJupiter'     : "org.mockito:mockito-junit-jupiter:$mockitoJunitJupiterVersion",
        'springBootStarterTest'   : "org.springframework.boot:spring-boot-starter-test:$springBootVersion",
        'springSecurityTest'      : "org.springframework.security:spring-security-test:$springVersion",
        'testContainersPostgreSql': "org.testcontainers:postgresql:$testContainerVersion",
        'testContainersJunit'     : "org.testcontainers:junit-jupiter:$testContainerVersion"
]

ext.libsJwt = [
        'jjwtApi'    : "io.jsonwebtoken:jjwt-api:$jwtVersion",
        'jjwtImpl'   : "io.jsonwebtoken:jjwt-impl:$jwtVersion",
        'jjwtJackson': "io.jsonwebtoken:jjwt-jackson:$jwtVersion"
]